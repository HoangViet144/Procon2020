[{"D:\\BKEL\\Procon2020\\Procon2020\\src\\index.js":"1","D:\\BKEL\\Procon2020\\Procon2020\\src\\App.js":"2","D:\\BKEL\\Procon2020\\Procon2020\\src\\reportWebVitals.js":"3","D:\\BKEL\\Procon2020\\Procon2020\\src\\axios.js":"4","D:\\BKEL\\Procon2020\\Procon2020\\src\\config.js":"5","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\game\\game.js":"6","D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\actions.js":"7","D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\actiontype.js":"8","D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\reducer.js":"9","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\board\\board.js":"10","D:\\BKEL\\Procon2020\\Procon2020\\src\\requestManagement\\axiosRequest.js":"11","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\MatchInfoPanel\\MatchInfoPanel.js":"12","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\matchInfoPanel\\matchInfoPanel.js":"13","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\agentInfoPanel\\agentInfoPanel.js":"14","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\board\\validation.js":"15","D:\\BKEL\\Procon2020\\Procon2020\\src\\strategies\\strategies.js":"16","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\timer\\timer.js":"17"},{"size":885,"mtime":1606890630444,"results":"18","hashOfConfig":"19"},{"size":223,"mtime":1606812121305,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":276,"mtime":1606788505926,"results":"22","hashOfConfig":"19"},{"size":229,"mtime":1607014522994,"results":"23","hashOfConfig":"19"},{"size":7645,"mtime":1607057156160,"results":"24","hashOfConfig":"19"},{"size":895,"mtime":1607056483053,"results":"25","hashOfConfig":"19"},{"size":190,"mtime":1606978630816,"results":"26","hashOfConfig":"19"},{"size":1381,"mtime":1607048194368,"results":"27","hashOfConfig":"19"},{"size":10216,"mtime":1607057939210,"results":"28","hashOfConfig":"19"},{"size":3667,"mtime":1607050218532,"results":"29","hashOfConfig":"19"},{"size":1695,"mtime":1606926687488,"results":"30","hashOfConfig":"19"},{"size":1568,"mtime":1606929654584,"results":"31","hashOfConfig":"19"},{"size":1627,"mtime":1606929978236,"results":"32","hashOfConfig":"19"},{"size":893,"mtime":1606990412916,"results":"33","hashOfConfig":"19"},{"size":5023,"mtime":1607056771402,"results":"34","hashOfConfig":"19"},{"size":432,"mtime":1607048260035,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"5zwe8p",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\BKEL\\Procon2020\\Procon2020\\src\\index.js",[],["78","79"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\App.js",["80"],"import logo from './logo.svg';\nimport './App.css';\nimport Game from './component/game/game'\n\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Game />\n        </div>\n    );\n}\n\nexport default App;\n","D:\\BKEL\\Procon2020\\Procon2020\\src\\reportWebVitals.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\axios.js",[],["81","82"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\config.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\game\\game.js",["83","84"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    makeStyles\r\n}\r\n    from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Board from '../board/board'\r\nimport MatchInfoPanel from '../matchInfoPanel/matchInfoPanel'\r\nimport AgentsInfoPanel from '../agentInfoPanel/agentInfoPanel'\r\n\r\nimport { strategiesList, getActionFromStrategy } from '../../strategies/strategies'\r\nimport { calculateRemainingTime } from '../timer/timer'\r\nimport { getMatches, getMatchesById, sendAction } from '../../requestManagement/axiosRequest'\r\nimport { setAgentAction } from '../../redux/actions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3)\r\n    },\r\n    button: {\r\n        border: '1px solid black'\r\n    }\r\n}));\r\n\r\nconst TIME_THRESH_HOLD = 1\r\nconst Game = (props) => {\r\n    const classes = useStyles();\r\n    const [matchID, setMatchID] = useState(-1)\r\n    /// remaining time\r\n    const [counter, setCounter] = useState(0)\r\n\r\n    /// use for set initial remaining time\r\n    useEffect(() => {\r\n        if (matchID !== -1 && props.matchInfo && props.matchesInfo) {\r\n            setCounter(\r\n                calculateRemainingTime(props.matchesInfo[matchID].turnMillis,\r\n                    props.matchesInfo[matchID].intervalMillis,\r\n                    props.matchInfo.startedAtUnixTime\r\n                )\r\n            )\r\n        }\r\n    }, [matchID, props.matchInfo, props.matchesInfo])\r\n\r\n    /// use for set countdown clock\r\n    useEffect(() => {\r\n        if (matchID === -1 || !props.matchInfo || !props.matchesInfo) return\r\n        const timer =\r\n            setInterval(() => {\r\n                console.log(\"set interval\")\r\n                if (counter === 0) {\r\n                    clearInterval(timer)\r\n                    return\r\n                }\r\n                setCounter(\r\n                    calculateRemainingTime(props.matchesInfo[matchID].turnMillis,\r\n                        props.matchesInfo[matchID].intervalMillis,\r\n                        props.matchInfo.startedAtUnixTime\r\n                    ))\r\n            }, 1000)\r\n        return () => clearInterval(timer);\r\n    }, [counter]);\r\n\r\n    /// send action when time < TIME_THRESH_HOLD\r\n    useEffect(() => {\r\n        if (counter < 2 * TIME_THRESH_HOLD && matchID !== -1) {\r\n            autoGenerateAction()\r\n        }\r\n        if (counter < TIME_THRESH_HOLD && matchID !== -1) {\r\n            console.log(\"force send action\")\r\n            handleSendAction()\r\n\r\n        }\r\n    }, [counter])\r\n\r\n    /// use for send action of agents \r\n    const handleSendAction = () => {\r\n        if (matchID !== -1 && props.agentAction && props.matchesInfo) {\r\n            console.log(\"send action to server\")\r\n            sendAction(props.agentAction, props.matchesInfo[matchID].teamID)\r\n        }\r\n    }\r\n\r\n    /// auto generate actions by greedy strategy if no decision was made\r\n    const autoGenerateAction = () => {\r\n        let madeDecision = false\r\n        for (let agent of props.agentAction) {\r\n            if (agent.dx !== 0 || agent.dy !== 0) {\r\n                madeDecision = true\r\n                break\r\n            }\r\n        }\r\n        if (!madeDecision) {\r\n            handleChosenStrategy({ id: 2, name: 'Greedy' })\r\n        }\r\n    }\r\n\r\n    /// list of matches\r\n    let options = []\r\n    for (var id in props.matchesInfo) {\r\n        options.push(props.matchesInfo[id])\r\n    }\r\n\r\n    const handleChosenMatch = (value) => {\r\n        if (!value) return\r\n        props.getMatchesById(value.id, props.matchesInfo[value.id - 1].teamID)\r\n        setMatchID(value.id - 1)\r\n    }\r\n\r\n    const handleUpdateMatchManual = () => {\r\n        if (matchID === -1) return\r\n        let matchID_tosend = matchID + 1\r\n        let teamID_tosend = props.matchesInfo[matchID].teamID\r\n        console.log(matchID_tosend, teamID_tosend)\r\n        props.getMatchesById(matchID_tosend, teamID_tosend)\r\n    }\r\n\r\n    const handleChosenStrategy = (value) => {\r\n        if (props.matchInfo) {\r\n            if (value && value.id === 1) return\r\n            let actionList = getActionFromStrategy(value, props.matchInfo, props.matchesInfo[matchID].teamID)\r\n            props.setAgentAction(actionList)\r\n        }\r\n    }\r\n    return (\r\n        <Grid\r\n            className={classes.root}\r\n            container\r\n            spacing={5}\r\n        >-\r\n            <Grid\r\n                item\r\n                container\r\n                spacing={3}\r\n            >\r\n                <Grid\r\n                    item\r\n                    md={5}\r\n                >\r\n                    <Button className={classes.button} onClick={props.getMatches}>Get matches</Button>\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    md={5}\r\n\r\n                >\r\n                    <Autocomplete\r\n                        options={options}\r\n                        getOptionLabel={(option) => option.id.toString()}\r\n                        onChange={(event, value) => handleChosenMatch(value)}\r\n                        renderInput={(params) => <TextField {...params} InputProps={{ ...params.InputProps, style: { fontSize: '0.75em' } }} label=\"Chọn trận đấu\" variant=\"outlined\" />}\r\n                    />\r\n\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                md={6}\r\n            >\r\n                <MatchInfoPanel matchInfo={matchID === -1 ? null : props.matchesInfo[matchID]} />\r\n                <br />\r\n\r\n                <br />\r\n                <Autocomplete\r\n                    options={strategiesList}\r\n                    defaultValue={{ id: 1, name: \"Manual\" }}\r\n                    getOptionLabel={(option) => option.name}\r\n                    onChange={(event, value) => handleChosenStrategy(value)}\r\n                    renderInput={(params) => <TextField {...params} InputProps={{ ...params.InputProps, style: { fontSize: '0.75em' } }} label=\"Choose strategy\" variant=\"outlined\" />}\r\n                />\r\n                <br />\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                >\r\n                    <Grid\r\n                        item\r\n                    >\r\n                        <p>Time left: {counter}</p>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                    >\r\n                        <Button className={classes.button} onClick={handleUpdateMatchManual}>Update current match</Button>\r\n\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                    >\r\n                        <Button className={classes.button} onClick={handleSendAction}>Send action</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                md={6}\r\n            >\r\n                <AgentsInfoPanel />\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                md={12}\r\n            >\r\n                <Board teamID={matchID === -1 ? null : props.matchesInfo[matchID].teamID} />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        matchesInfo: state.matchesInfo,\r\n        matchInfo: state.matchInfo,\r\n        agentAction: state.agentAction\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getMatches, getMatchesById, setAgentAction })(Game)","D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\actions.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\actiontype.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\reducer.js",["85","86"],"import * as actionTypes from './actiontype';\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.INIT_BOARD:\r\n            console.log(\"call\")\r\n            return {\r\n                ...state,\r\n                matchesInfo: action.payload\r\n            }\r\n        case actionTypes.INFO_BOARD:\r\n            return {\r\n                ...state,\r\n                matchInfo: {\r\n                    ...action.payload,\r\n                    startedAtUnixTime: Date.now()\r\n                }\r\n            }\r\n        case actionTypes.SET_AGENT_ACTION:\r\n            return {\r\n                ...state,\r\n                agentAction: action.payload\r\n            }\r\n        case actionTypes.UPDATE_AGENT_ACTION:\r\n            let newAgentAction = [...state.agentAction]\r\n            for (let ele of newAgentAction) {\r\n                if (ele.agentID == action.payload.agentID) {\r\n                    ele.dx = action.payload.dx\r\n                    ele.dy = action.payload.dy\r\n                    ele.type = action.payload.type\r\n                }\r\n            }\r\n            console.log(newAgentAction)\r\n            return {\r\n                ...state,\r\n                agentAction: [\r\n                    ...newAgentAction\r\n                ]\r\n            }\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\board\\board.js",["87","88","89","90","91","92","93","94","95","96"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\requestManagement\\axiosRequest.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\MatchInfoPanel\\MatchInfoPanel.js",["97","98","99","100","101"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\matchInfoPanel\\matchInfoPanel.js",["102","103","104","105"],"import React from 'react'\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    makeStyles\r\n}\r\n    from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    }\r\n}));\r\nconst InfoPanel = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Table>\r\n            <TableBody>\r\n                <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>team</TableCell>\r\n                    <TableCell>Room</TableCell>\r\n                    <TableCell>turns</TableCell>\r\n                    <TableCell>turn sec</TableCell>\r\n                    <TableCell>interval sec</TableCell>\r\n                </TableRow>\r\n                {props.matchInfo ?\r\n                    <TableRow>\r\n                        <TableCell>{props.matchInfo.teamID}</TableCell>\r\n                        <TableCell>{props.matchInfo.matchTo}</TableCell>\r\n                        <TableCell>{props.matchInfo.id}</TableCell>\r\n                        <TableCell>{props.matchInfo.turns}</TableCell>\r\n                        <TableCell>{props.matchInfo.turnMillis}</TableCell>\r\n                        <TableCell>{props.matchInfo.intervalMillis}</TableCell>\r\n                    </TableRow>\r\n                    : null}\r\n            </TableBody>\r\n        </Table>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        matchesInfo: state.matchesInfo\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(InfoPanel)","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\agentInfoPanel\\agentInfoPanel.js",["106","107","108","109"],"import React from 'react'\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    makeStyles\r\n}\r\n    from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    }\r\n}));\r\nconst InfoPanel = (props) => {\r\n    const classes = useStyles();\r\n    console.log(props.agentAction)\r\n    return (\r\n        <Table>\r\n            <TableBody>\r\n                <TableRow>\r\n                    <TableCell>AgentID</TableCell>\r\n                    <TableCell>CurX</TableCell>\r\n                    <TableCell>CurY</TableCell>\r\n                    <TableCell>dx</TableCell>\r\n                    <TableCell>dy</TableCell>\r\n                    <TableCell>type</TableCell>\r\n                </TableRow>\r\n                {props.agentAction && props.agentAction.map((ele, ind) => {\r\n                    return (\r\n                        <TableRow key={ind}>\r\n                            <TableCell>{ele.agentID}</TableCell>\r\n                            <TableCell>{ele.curX}</TableCell>\r\n                            <TableCell>{ele.curY}</TableCell>\r\n                            <TableCell>{ele.dx}</TableCell>\r\n                            <TableCell>{ele.dy}</TableCell>\r\n                            <TableCell>{ele.type}</TableCell>\r\n                        </TableRow>\r\n                    )\r\n                })}\r\n            </TableBody>\r\n        </Table>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        agentAction: state.agentAction\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(InfoPanel)","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\board\\validation.js",[],["110","111"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\strategies\\strategies.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\timer\\timer.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":12},{"ruleId":"112","replacedBy":"120"},{"ruleId":"114","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":69,"column":8,"nodeType":"124","endLine":69,"endColumn":17,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":81,"column":8,"nodeType":"124","endLine":81,"endColumn":17,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":8,"column":5,"nodeType":"130","messageId":"131","endLine":44,"endColumn":6},{"ruleId":"132","severity":1,"message":"133","line":31,"column":33,"nodeType":"134","messageId":"135","endLine":31,"endColumn":35},{"ruleId":"116","severity":1,"message":"136","line":5,"column":5,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":98,"column":22,"nodeType":"118","messageId":"139","endLine":98,"endColumn":23},{"ruleId":"137","severity":1,"message":"140","line":99,"column":26,"nodeType":"118","messageId":"139","endLine":99,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":154,"column":49,"nodeType":"134","messageId":"135","endLine":154,"endColumn":51},{"ruleId":"122","severity":1,"message":"141","line":205,"column":8,"nodeType":"124","endLine":205,"endColumn":25,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":233,"column":29,"nodeType":"145","endLine":233,"endColumn":76},{"ruleId":"122","severity":1,"message":"146","line":246,"column":8,"nodeType":"124","endLine":246,"endColumn":25,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"148","line":253,"column":24,"nodeType":"134","messageId":"135","endLine":253,"endColumn":26},{"ruleId":"132","severity":1,"message":"148","line":253,"column":39,"nodeType":"134","messageId":"135","endLine":253,"endColumn":41},{"ruleId":"122","severity":1,"message":"149","line":262,"column":8,"nodeType":"124","endLine":262,"endColumn":27,"suggestions":"150"},{"ruleId":"116","severity":1,"message":"151","line":3,"column":5,"nodeType":"118","messageId":"119","endLine":3,"endColumn":11},{"ruleId":"116","severity":1,"message":"152","line":4,"column":5,"nodeType":"118","messageId":"119","endLine":4,"endColumn":9},{"ruleId":"116","severity":1,"message":"136","line":5,"column":5,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"153","line":20,"column":11,"nodeType":"118","messageId":"119","endLine":20,"endColumn":18},{"ruleId":"132","severity":1,"message":"148","line":32,"column":53,"nodeType":"134","messageId":"135","endLine":32,"endColumn":55},{"ruleId":"116","severity":1,"message":"151","line":3,"column":5,"nodeType":"118","messageId":"119","endLine":3,"endColumn":11},{"ruleId":"116","severity":1,"message":"152","line":4,"column":5,"nodeType":"118","messageId":"119","endLine":4,"endColumn":9},{"ruleId":"116","severity":1,"message":"136","line":5,"column":5,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"153","line":20,"column":11,"nodeType":"118","messageId":"119","endLine":20,"endColumn":18},{"ruleId":"116","severity":1,"message":"151","line":3,"column":5,"nodeType":"118","messageId":"119","endLine":3,"endColumn":11},{"ruleId":"116","severity":1,"message":"152","line":4,"column":5,"nodeType":"118","messageId":"119","endLine":4,"endColumn":9},{"ruleId":"116","severity":1,"message":"136","line":5,"column":5,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"153","line":20,"column":11,"nodeType":"118","messageId":"119","endLine":20,"endColumn":18},{"ruleId":"112","replacedBy":"154"},{"ruleId":"114","replacedBy":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["156"],["157"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'matchID', 'props.matchInfo', and 'props.matchesInfo'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCounter' needs the current value of 'matchID'.","ArrayExpression",["158"],"React Hook useEffect has missing dependencies: 'autoGenerateAction', 'handleSendAction', and 'matchID'. Either include them or remove the dependency array.",["159"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextField' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","React Hook useEffect has a missing dependency: 'MY_TEAM'. Either include it or remove the dependency array.",["160"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'classes', 'handleChosen', and 'props.matchInfo'. Either include them or remove the dependency array.",["161"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'buttonGroupInfo'. Either include it or remove the dependency array.",["162"],"'Button' is defined but never used.","'Grid' is defined but never used.","'classes' is assigned a value but never used.",["156"],["157"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [counter, matchID, props.matchInfo, props.matchesInfo]",{"range":"173","text":"174"},"Update the dependencies array to be: [autoGenerateAction, counter, handleSendAction, matchID]",{"range":"175","text":"176"},"Update the dependencies array to be: [MY_TEAM, props.matchInfo]",{"range":"177","text":"178"},"Update the dependencies array to be: [buttonGroupInfo, classes, handleChosen, props.matchInfo]",{"range":"179","text":"180"},"Update the dependencies array to be: [buttonGroupInfo, props.agentAction]",{"range":"181","text":"182"},[2382,2391],"[counter, matchID, props.matchInfo, props.matchesInfo]",[2739,2748],"[autoGenerateAction, counter, handleSendAction, matchID]",[7568,7585],"[MY_TEAM, props.matchInfo]",[9266,9283],"[buttonGroupInfo, classes, handleChosen, props.matchInfo]",[9829,9848],"[buttonGroupInfo, props.agentAction]"]