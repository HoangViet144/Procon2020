[{"D:\\BKEL\\Procon2020\\Procon2020\\src\\index.js":"1","D:\\BKEL\\Procon2020\\Procon2020\\src\\App.js":"2","D:\\BKEL\\Procon2020\\Procon2020\\src\\reportWebVitals.js":"3","D:\\BKEL\\Procon2020\\Procon2020\\src\\axios.js":"4","D:\\BKEL\\Procon2020\\Procon2020\\src\\config.js":"5","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\game\\game.js":"6","D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\actions.js":"7","D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\actiontype.js":"8","D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\reducer.js":"9","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\board\\board.js":"10","D:\\BKEL\\Procon2020\\Procon2020\\src\\requestManagement\\axiosRequest.js":"11","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\MatchInfoPanel\\MatchInfoPanel.js":"12","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\matchInfoPanel\\matchInfoPanel.js":"13","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\agentInfoPanel\\agentInfoPanel.js":"14"},{"size":885,"mtime":1606890630444,"results":"15","hashOfConfig":"16"},{"size":223,"mtime":1606812121305,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":276,"mtime":1606788505926,"results":"19","hashOfConfig":"16"},{"size":229,"mtime":1606926641602,"results":"20","hashOfConfig":"16"},{"size":2839,"mtime":1606927176016,"results":"21","hashOfConfig":"16"},{"size":440,"mtime":1606792123377,"results":"22","hashOfConfig":"16"},{"size":132,"mtime":1606927401428,"results":"23","hashOfConfig":"16"},{"size":694,"mtime":1606927441292,"results":"24","hashOfConfig":"16"},{"size":5678,"mtime":1606926264186,"results":"25","hashOfConfig":"16"},{"size":1912,"mtime":1606893011402,"results":"26","hashOfConfig":"16"},{"size":1695,"mtime":1606926687488,"results":"27","hashOfConfig":"16"},{"size":1695,"mtime":1606926687488,"results":"28","hashOfConfig":"16"},{"size":1683,"mtime":1606926845183,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5zwe8p",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"D:\\BKEL\\Procon2020\\Procon2020\\src\\index.js",[],["65","66"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\App.js",["67"],"import logo from './logo.svg';\nimport './App.css';\nimport Game from './component/game/game'\n\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Game />\n        </div>\n    );\n}\n\nexport default App;\n","D:\\BKEL\\Procon2020\\Procon2020\\src\\reportWebVitals.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\axios.js",[],["68","69"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\config.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\game\\game.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\actions.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\actiontype.js",[],"D:\\BKEL\\Procon2020\\Procon2020\\src\\redux\\reducer.js",["70"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\board\\board.js",["71","72","73","74","75","76","77","78","79","80"],"import React from 'react'\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    makeStyles\r\n}\r\n    from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport WallImage from './wall.png'\r\n\r\nconst TEAM1 = 1 ///? id luon la 1 va 2??? 1 la team minh???\r\nconst TEAM2 = 2\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // backgroundColor: theme.palette.background.dark,\r\n        minHeight: '100%',\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3)\r\n    },\r\n    button: {\r\n        border: '1px solid black',\r\n        backgroundColor: 'white',\r\n        maxHeight: '60px',\r\n        maxWidth: '60px',\r\n        minWidth: '60px',\r\n        minHeight: '60px',\r\n        padding: '0px',\r\n        margin: '0px'\r\n    },\r\n    agentTeam1: {\r\n        backgroundColor: 'FireBrick !important'\r\n    },\r\n    agentTeam2: {\r\n        backgroundColor: 'DarkSlateBlue !important'\r\n    },\r\n    tiledTeam1: {\r\n        backgroundColor: 'OrangeRed'\r\n    },\r\n    tiledTeam2: {\r\n        backgroundColor: 'DeepSkyBlue'\r\n    }\r\n}));\r\nconst Board = (props) => {\r\n    const classes = useStyles();\r\n    let buttonGroupInfo = []\r\n    let buttonGroup = []\r\n    if (props.matchInfo) {\r\n        /// get point\r\n        for (var i = 0; i < props.matchInfo.height; i++) {\r\n            let rowInfo = []\r\n            for (var j = 0; j < props.matchInfo.width; j++) {\r\n                let info = {\r\n                    point: props.matchInfo.points[i][j],\r\n                    obstacles: false,\r\n                    css: [\"button\"]\r\n                }\r\n                rowInfo.push(info)\r\n            }\r\n            buttonGroupInfo.push(rowInfo)\r\n        }\r\n\r\n        /// get tiled\r\n        for (var i = 0; i < props.matchInfo.height; i++) {\r\n            for (var j = 0; j < props.matchInfo.width; j++) {\r\n                if (props.matchInfo.tiled[i][j] == TEAM1) {\r\n                    buttonGroupInfo[i][j].css.push(\"tiledTeam1\")\r\n                }\r\n                if (props.matchInfo.tiled[i][j] == TEAM2) {\r\n                    buttonGroupInfo[i][j].css.push(\"tiledTeam2\")\r\n                }\r\n            }\r\n        }\r\n\r\n        /// get treasure\r\n        for (var id in props.matchInfo.treasure) {\r\n            let x = props.matchInfo.treasure[id].x\r\n            let y = props.matchInfo.treasure[id].y\r\n            let point = props.matchInfo.treasure[id].point\r\n            let status = props.matchInfo.treasure[id].status\r\n            buttonGroupInfo[y - 1][x - 1].treasure = {\r\n                point: point,\r\n                status: status\r\n            }\r\n        }\r\n        /// get obstacles\r\n        for (var id in props.matchInfo.obstacles) {\r\n            let x = props.matchInfo.obstacles[id].x\r\n            let y = props.matchInfo.obstacles[id].y\r\n            buttonGroupInfo[y - 1][x - 1].obstacles = true\r\n        }\r\n\r\n        /// get current agents' position\r\n        if (props.matchInfo.teams[0].teamID === TEAM1) {\r\n            for (let id in props.matchInfo.teams[0].agents) {\r\n                let x = props.matchInfo.teams[0].agents[id].x\r\n                let y = props.matchInfo.teams[0].agents[id].y\r\n                let agentID = props.matchInfo.teams[0].agents[id].agentID\r\n                buttonGroupInfo[y - 1][x - 1].agentID = agentID\r\n                buttonGroupInfo[y - 1][x - 1].css.push(\"agentTeam1\")\r\n            }\r\n        }\r\n\r\n        if (props.matchInfo.teams[1].teamID === TEAM2) {\r\n            for (let id in props.matchInfo.teams[1].agents) {\r\n                let x = props.matchInfo.teams[1].agents[id].x\r\n                let y = props.matchInfo.teams[1].agents[id].y\r\n                let agentID = props.matchInfo.teams[1].agents[id].agentID\r\n                buttonGroupInfo[y - 1][x - 1].agentID = agentID\r\n                buttonGroupInfo[y - 1][x - 1].css.push(\"agentTeam2\")\r\n            }\r\n        }\r\n\r\n        /// render output\r\n        for (var i = 0; i < props.matchInfo.height; i++) {\r\n            let buttonRow = []\r\n            for (var j = 0; j < props.matchInfo.width; j++) {\r\n                let textOut = buttonGroupInfo[i][j].point.toString()\r\n                if (!buttonGroupInfo[i][j].obstacles &&\r\n                    buttonGroupInfo[i][j].treasure &&\r\n                    buttonGroupInfo[i][j].treasure.status === 0) {\r\n                    textOut += \",T:\" + buttonGroupInfo[i][j].treasure.point.toString()\r\n                }\r\n                if (buttonGroupInfo[i][j].obstacles) {\r\n                    textOut = \"O\"\r\n                }\r\n                let css = []\r\n                for (var id in buttonGroupInfo[i][j].css) {\r\n                    css.push(classes[buttonGroupInfo[i][j].css[id]])\r\n                }\r\n                buttonRow.push(\r\n                    <Button\r\n                        key={i + j}\r\n                        className={css.join(' ')}\r\n                        disabled={buttonGroupInfo[i][j].obstacles}\r\n                    >\r\n                        {buttonGroupInfo[i][j].obstacles ?\r\n                            <img src={WallImage} style={{ width: '40px' }}></img> :\r\n                            textOut\r\n                        }\r\n                    </Button >\r\n\r\n                )\r\n            }\r\n            buttonGroup.push(\r\n                <Grid item key={i} md={12}>\r\n                    {buttonRow}\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            className={classes.root}\r\n\r\n        >\r\n            {buttonGroup}\r\n        </Grid>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        matchInfo: state.matchInfo\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Board)","D:\\BKEL\\Procon2020\\Procon2020\\src\\requestManagement\\axiosRequest.js",["81","82"],"import axios from 'axios'\r\nimport { initBoard } from '../redux/actions'\r\nimport { TOKEN, BASE_URL } from '../config'\r\nimport { INIT_BOARD } from '../redux/actiontype'\r\nimport * as actionTypes from '../redux/actiontype';\r\n\r\nexport const getMatches = () => async dispatch => {\r\n    try {\r\n        var config = {\r\n            method: 'get',\r\n            url: BASE_URL + '/matches',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            params: {\r\n                token: TOKEN\r\n            }\r\n        };\r\n        axios(config)\r\n            .then(response => {\r\n                console.log(JSON.stringify(response.data));\r\n                dispatch({\r\n                    type: actionTypes.INIT_BOARD,\r\n                    payload: {\r\n                        ...response.data\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    catch (er) {\r\n        console.log(er)\r\n        alert(\"er\")\r\n    }\r\n}\r\nexport const getMatchesById = (id) => async dispatch => {\r\n    try {\r\n        console.log(id)\r\n        var config = {\r\n            method: 'get',\r\n            url: BASE_URL + '/matches/' + id.toString(),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            params: {\r\n                token: TOKEN\r\n            }\r\n        };\r\n        axios(config)\r\n            .then(response => {\r\n                console.log(JSON.stringify(response.data));\r\n                dispatch({\r\n                    type: actionTypes.INFO_BOARD,\r\n                    payload: {\r\n                        ...response.data\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        return\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\MatchInfoPanel\\MatchInfoPanel.js",["83","84","85","86","87"],"D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\matchInfoPanel\\matchInfoPanel.js",["88","89","90","91","92"],"import React from 'react'\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    makeStyles\r\n}\r\n    from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    }\r\n}));\r\nconst InfoPanel = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Table>\r\n            <TableBody>\r\n                <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>team</TableCell>\r\n                    <TableCell>Room</TableCell>\r\n                    <TableCell>turns</TableCell>\r\n                    <TableCell>turn sec</TableCell>\r\n                    <TableCell>interval sec</TableCell>\r\n                </TableRow>\r\n                {props.matchesInfo && props.matchID != -1 ?\r\n                    <TableRow>\r\n                        <TableCell>{props.matchesInfo[props.matchID].teamID}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].matchTo}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].id}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].turns}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].turnMillis}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].intervalMillis}</TableCell>\r\n                    </TableRow>\r\n                    : null}\r\n            </TableBody>\r\n        </Table>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        matchesInfo: state.matchesInfo\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(InfoPanel)","D:\\BKEL\\Procon2020\\Procon2020\\src\\component\\agentInfoPanel\\agentInfoPanel.js",["93","94","95","96","97"],"import React from 'react'\r\nimport {\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    makeStyles\r\n}\r\n    from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n    }\r\n}));\r\nconst InfoPanel = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Table>\r\n            <TableBody>\r\n                <TableRow>\r\n                    <TableCell>AgentID</TableCell>\r\n                    <TableCell>CurX</TableCell>\r\n                    <TableCell>CurY</TableCell>\r\n                    <TableCell>dx</TableCell>\r\n                    <TableCell>dy</TableCell>\r\n                    <TableCell>type</TableCell>\r\n                </TableRow>\r\n                {props.matchesInfo && props.matchID != -1 ?\r\n                    <TableRow>\r\n                        <TableCell>{props.matchesInfo[props.matchID].teamID}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].matchTo}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].id}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].turns}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].turnMillis}</TableCell>\r\n                        <TableCell>{props.matchesInfo[props.matchID].intervalMillis}</TableCell>\r\n                    </TableRow>\r\n                    : null}\r\n            </TableBody>\r\n        </Table>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        matchesInfo: state.matchesInfo\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(InfoPanel)",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":12},{"ruleId":"98","replacedBy":"106"},{"ruleId":"100","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":8,"column":5,"nodeType":"110","messageId":"111","endLine":25,"endColumn":6},{"ruleId":"102","severity":1,"message":"112","line":5,"column":5,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"114","line":64,"column":18,"nodeType":"104","messageId":"115","endLine":64,"endColumn":19},{"ruleId":"113","severity":1,"message":"116","line":65,"column":22,"nodeType":"104","messageId":"115","endLine":65,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":66,"column":49,"nodeType":"119","messageId":"120","endLine":66,"endColumn":51},{"ruleId":"117","severity":1,"message":"118","line":69,"column":49,"nodeType":"119","messageId":"120","endLine":69,"endColumn":51},{"ruleId":"113","severity":1,"message":"121","line":87,"column":18,"nodeType":"104","messageId":"115","endLine":87,"endColumn":20},{"ruleId":"113","severity":1,"message":"114","line":115,"column":18,"nodeType":"104","messageId":"115","endLine":115,"endColumn":19},{"ruleId":"113","severity":1,"message":"116","line":117,"column":22,"nodeType":"104","messageId":"115","endLine":117,"endColumn":23},{"ruleId":"113","severity":1,"message":"121","line":128,"column":26,"nodeType":"104","messageId":"115","endLine":128,"endColumn":28},{"ruleId":"122","severity":1,"message":"123","line":138,"column":29,"nodeType":"124","endLine":138,"endColumn":76},{"ruleId":"102","severity":1,"message":"125","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":19},{"ruleId":"102","severity":1,"message":"126","line":4,"column":10,"nodeType":"104","messageId":"105","endLine":4,"endColumn":20},{"ruleId":"102","severity":1,"message":"127","line":3,"column":5,"nodeType":"104","messageId":"105","endLine":3,"endColumn":11},{"ruleId":"102","severity":1,"message":"128","line":4,"column":5,"nodeType":"104","messageId":"105","endLine":4,"endColumn":9},{"ruleId":"102","severity":1,"message":"112","line":5,"column":5,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},{"ruleId":"102","severity":1,"message":"129","line":20,"column":11,"nodeType":"104","messageId":"105","endLine":20,"endColumn":18},{"ruleId":"117","severity":1,"message":"130","line":32,"column":53,"nodeType":"119","messageId":"120","endLine":32,"endColumn":55},{"ruleId":"102","severity":1,"message":"127","line":3,"column":5,"nodeType":"104","messageId":"105","endLine":3,"endColumn":11},{"ruleId":"102","severity":1,"message":"128","line":4,"column":5,"nodeType":"104","messageId":"105","endLine":4,"endColumn":9},{"ruleId":"102","severity":1,"message":"112","line":5,"column":5,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},{"ruleId":"102","severity":1,"message":"129","line":20,"column":11,"nodeType":"104","messageId":"105","endLine":20,"endColumn":18},{"ruleId":"117","severity":1,"message":"130","line":32,"column":53,"nodeType":"119","messageId":"120","endLine":32,"endColumn":55},{"ruleId":"102","severity":1,"message":"127","line":3,"column":5,"nodeType":"104","messageId":"105","endLine":3,"endColumn":11},{"ruleId":"102","severity":1,"message":"128","line":4,"column":5,"nodeType":"104","messageId":"105","endLine":4,"endColumn":9},{"ruleId":"102","severity":1,"message":"112","line":5,"column":5,"nodeType":"104","messageId":"105","endLine":5,"endColumn":14},{"ruleId":"102","severity":1,"message":"129","line":20,"column":11,"nodeType":"104","messageId":"105","endLine":20,"endColumn":18},{"ruleId":"117","severity":1,"message":"130","line":32,"column":53,"nodeType":"119","messageId":"120","endLine":32,"endColumn":55},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["131"],["132"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'TextField' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'j' is already defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'initBoard' is defined but never used.","'INIT_BOARD' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'classes' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]